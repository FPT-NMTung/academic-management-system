// <auto-generated />
using System;
using AcademicManagementSystem.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademicManagementSystem.Migrations
{
    [DbContext(typeof(AmsContext))]
    [Migration("20221027092700_Add Attendance And Attendance Status")]
    partial class AddAttendanceAndAttendanceStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ActiveRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("exp_date");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("refresh_token");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("active_refresh_token");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Admin", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("UserId");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Attendance", b =>
                {
                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int>("AttendanceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.HasKey("SessionId", "StudentId");

                    b.HasIndex("AttendanceStatusId");

                    b.HasIndex("StudentId");

                    b.ToTable("attendance");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.AttendanceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("attendance_status");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Center", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("district_id");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<int>("WardId")
                        .HasColumnType("int")
                        .HasColumnName("ward_id");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("WardId");

                    b.ToTable("center");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CenterId")
                        .HasColumnType("int")
                        .HasColumnName("center_id");

                    b.Property<int>("ClassDaysId")
                        .HasColumnType("int")
                        .HasColumnName("class_days_id");

                    b.Property<TimeSpan>("ClassHourEnd")
                        .HasColumnType("time")
                        .HasColumnName("class_hour_end");

                    b.Property<TimeSpan>("ClassHourStart")
                        .HasColumnType("time")
                        .HasColumnName("class_hour_start");

                    b.Property<int>("ClassStatusId")
                        .HasColumnType("int")
                        .HasColumnName("class_status_id");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("completion_date");

                    b.Property<string>("CourseFamilyCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("course_family_code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("GraduationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("graduation_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("SroId")
                        .HasColumnType("int")
                        .HasColumnName("sro_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.HasIndex("ClassDaysId");

                    b.HasIndex("ClassStatusId");

                    b.HasIndex("CourseFamilyCode");

                    b.HasIndex("SroId");

                    b.ToTable("class");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ClassDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("class_days");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ClassSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassDaysId")
                        .HasColumnType("int")
                        .HasColumnName("class_days_id");

                    b.Property<TimeSpan>("ClassHourEnd")
                        .HasColumnType("time")
                        .HasColumnName("class_hour_end");

                    b.Property<TimeSpan>("ClassHourStart")
                        .HasColumnType("time")
                        .HasColumnName("class_hour_start");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<int>("ClassStatusId")
                        .HasColumnType("int")
                        .HasColumnName("class_status_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<int>("ExamRoomId")
                        .HasColumnType("int")
                        .HasColumnName("exam_room_id");

                    b.Property<int>("LabRoomId")
                        .HasColumnType("int")
                        .HasColumnName("lab_room_id");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<DateTime>("PracticalExamDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("practical_exam_date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.Property<DateTime>("TheoryExamDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("theory_exam_date");

                    b.Property<int>("TheoryRoomId")
                        .HasColumnType("int")
                        .HasColumnName("theory_room_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("ClassDaysId");

                    b.HasIndex("ClassId");

                    b.HasIndex("ClassStatusId");

                    b.HasIndex("ExamRoomId");

                    b.HasIndex("LabRoomId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TheoryRoomId");

                    b.ToTable("class_schedule");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ClassStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("class_status");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Course", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("code");

                    b.Property<string>("CourseFamilyCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("course_family_code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("SemesterCount")
                        .HasColumnType("int")
                        .HasColumnName("semester_count");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Code");

                    b.HasIndex("CourseFamilyCode");

                    b.ToTable("course");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.CourseFamily", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("int")
                        .HasColumnName("published_year");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Code");

                    b.ToTable("course_family");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.CourseModuleSemester", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("course_code");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("semester_id");

                    b.HasKey("CourseCode", "ModuleId", "SemesterId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("SemesterId");

                    b.ToTable("course_module_semester");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prefix");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("district");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("gender");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.GradeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("grade_category");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.GradeCategoryModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GradeCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("grade_category_id");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("QuantityGradeItem")
                        .HasColumnType("int")
                        .HasColumnName("quantity_grade_item");

                    b.Property<int>("TotalWeight")
                        .HasColumnType("int")
                        .HasColumnName("total_weight");

                    b.HasKey("Id");

                    b.HasIndex("GradeCategoryId");

                    b.HasIndex("ModuleId");

                    b.ToTable("grade_category_module");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.GradeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GradeCategoryModuleId")
                        .HasColumnType("int")
                        .HasColumnName("grade_category_module_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("GradeCategoryModuleId");

                    b.ToTable("grade_item");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CenterId")
                        .HasColumnType("int")
                        .HasColumnName("center_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<int>("ExamType")
                        .HasColumnType("int")
                        .HasColumnName("exam_type");

                    b.Property<int>("Hours")
                        .HasColumnType("int")
                        .HasColumnName("hours");

                    b.Property<int?>("MaxPracticalGrade")
                        .HasColumnType("int")
                        .HasColumnName("max_practical_grade");

                    b.Property<int?>("MaxTheoryGrade")
                        .HasColumnType("int")
                        .HasColumnName("max_theory_grade");

                    b.Property<string>("ModuleExamNamePortal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("module_exam_name_portal");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("module_name");

                    b.Property<int>("ModuleType")
                        .HasColumnType("int")
                        .HasColumnName("module_type");

                    b.Property<string>("SemesterNamePortal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("semester_name_portal");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.ToTable("module");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("province");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<int>("CenterId")
                        .HasColumnType("int")
                        .HasColumnName("center_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int")
                        .HasColumnName("room_type_id");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("room");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("room_type");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("semester");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("class_schedule_id");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<DateTime>("LearningDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("learning_date");

                    b.Property<int>("SessionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("session_type_id");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("ClassScheduleId");

                    b.HasIndex("SessionTypeId");

                    b.ToTable("session");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.SessionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("session_type");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("skill");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Sro", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("UserId");

                    b.ToTable("sro");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Student", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("application_date");

                    b.Property<string>("ApplicationDocument")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("application_document");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("company_address");

                    b.Property<string>("CompanyPosition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("company_position");

                    b.Property<int?>("CompanySalary")
                        .HasColumnType("int")
                        .HasColumnName("company_salary");

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contact_address");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("contact_phone");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("course_code");

                    b.Property<string>("EnrollNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("enroll_number");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("facebook_url");

                    b.Property<int>("FeePlan")
                        .HasColumnType("int")
                        .HasColumnName("fee_plan");

                    b.Property<string>("HighSchool")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("high_school");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("home_phone");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<string>("ParentalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("parental_name");

                    b.Property<string>("ParentalPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("parental_phone");

                    b.Property<string>("ParentalRelationship")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("parental_relationship");

                    b.Property<string>("PortfolioUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("portfolio_url");

                    b.Property<int>("Promotion")
                        .HasColumnType("int")
                        .HasColumnName("promotion");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("status_date");

                    b.Property<string>("University")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("university");

                    b.Property<string>("WorkingCompany")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("working_company");

                    b.HasKey("UserId");

                    b.HasIndex("CourseCode");

                    b.HasIndex("EnrollNumber")
                        .IsUnique();

                    b.ToTable("student");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.StudentClass", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("StudentId", "ClassId");

                    b.HasIndex("ClassId");

                    b.ToTable("student_class");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Teacher", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("company_address");

                    b.Property<string>("Nickname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nickname");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("salary");

                    b.Property<DateTime>("StartWorkingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_working_date");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("tax_code");

                    b.Property<int>("TeacherTypeId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_type_id");

                    b.Property<int>("WorkingTimeId")
                        .HasColumnType("int")
                        .HasColumnName("working_time_id");

                    b.HasKey("UserId");

                    b.HasIndex("TaxCode")
                        .IsUnique();

                    b.HasIndex("TeacherTypeId");

                    b.HasIndex("WorkingTimeId");

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.TeacherType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("teacher_type");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<int>("CenterId")
                        .HasColumnType("int")
                        .HasColumnName("center_id");

                    b.Property<string>("CitizenIdentityCardNo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("citizen_identity_card_no");

                    b.Property<DateTime>("CitizenIdentityCardPublishedDate")
                        .HasColumnType("date")
                        .HasColumnName("citizen_identity_card_published_date");

                    b.Property<string>("CitizenIdentityCardPublishedPlace")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("citizen_identity_card_published_place");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("district_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("EmailOrganization")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_organization");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("first_name");

                    b.Property<int>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("gender_id");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("mobile_phone");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<int>("WardId")
                        .HasColumnType("int")
                        .HasColumnName("ward_id");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.HasIndex("CitizenIdentityCardNo")
                        .IsUnique();

                    b.HasIndex("DistrictId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmailOrganization")
                        .IsUnique();

                    b.HasIndex("GenderId");

                    b.HasIndex("MobilePhone")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.HasIndex("RoleId");

                    b.HasIndex("WardId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("district_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prefix");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("ward");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.WorkingTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("working_time");
                });

            modelBuilder.Entity("SkillTeacher", b =>
                {
                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.Property<int>("TeachersUserId")
                        .HasColumnType("int");

                    b.HasKey("SkillsId", "TeachersUserId");

                    b.HasIndex("TeachersUserId");

                    b.ToTable("SkillTeacher");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ActiveRefreshToken", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.User", "User")
                        .WithMany("ActiveRefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Admin", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("AcademicManagementSystem.Context.AmsModels.Admin", "UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Attendance", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.AttendanceStatus", "AttendanceStatus")
                        .WithMany("Attendances")
                        .HasForeignKey("AttendanceStatusId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Session", "Session")
                        .WithMany("Attendances")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("AttendanceStatus");

                    b.Navigation("Session");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Center", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.District", "District")
                        .WithMany("Centers")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Province", "Province")
                        .WithMany("Centers")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Province");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Class", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Center", "Center")
                        .WithMany("Classes")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.ClassDays", "ClassDays")
                        .WithMany("Classes")
                        .HasForeignKey("ClassDaysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.ClassStatus", "ClassStatus")
                        .WithMany("Classes")
                        .HasForeignKey("ClassStatusId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.CourseFamily", "CourseFamily")
                        .WithMany("Classes")
                        .HasForeignKey("CourseFamilyCode")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Sro", "Sro")
                        .WithMany("Classes")
                        .HasForeignKey("SroId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("ClassDays");

                    b.Navigation("ClassStatus");

                    b.Navigation("CourseFamily");

                    b.Navigation("Sro");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ClassSchedule", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.ClassDays", "ClassDays")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("ClassDaysId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Class", "Class")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.ClassStatus", "ClassStatus")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("ClassStatusId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Room", "ExamRoom")
                        .WithMany("ClassSchedulesExamRoom")
                        .HasForeignKey("ExamRoomId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Room", "LabRoom")
                        .WithMany("ClassSchedulesLabRoom")
                        .HasForeignKey("LabRoomId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Module", "Module")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Teacher", "Teacher")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Room", "TheoryRoom")
                        .WithMany("ClassSchedulesTheoryRoom")
                        .HasForeignKey("TheoryRoomId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("ClassDays");

                    b.Navigation("ClassStatus");

                    b.Navigation("ExamRoom");

                    b.Navigation("LabRoom");

                    b.Navigation("Module");

                    b.Navigation("Teacher");

                    b.Navigation("TheoryRoom");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Course", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.CourseFamily", "CourseFamily")
                        .WithMany("Courses")
                        .HasForeignKey("CourseFamilyCode")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("CourseFamily");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.CourseModuleSemester", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Course", "Course")
                        .WithMany("CoursesModulesSemesters")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Module", "Module")
                        .WithMany("CoursesModulesSemesters")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Semester", "Semester")
                        .WithMany("CoursesModuleSemesters")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Module");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.District", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.GradeCategoryModule", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.GradeCategory", "GradeCategory")
                        .WithMany("GradeCategoryModules")
                        .HasForeignKey("GradeCategoryId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Module", "Module")
                        .WithMany("GradeCategoryModule")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("GradeCategory");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.GradeItem", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.GradeCategoryModule", "GradeCategoryModule")
                        .WithMany("GradeItems")
                        .HasForeignKey("GradeCategoryModuleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("GradeCategoryModule");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Module", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Center", "Center")
                        .WithMany("Modules")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Room", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Center", "Center")
                        .WithMany("Rooms")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Session", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.ClassSchedule", "ClassSchedule")
                        .WithMany("Sessions")
                        .HasForeignKey("ClassScheduleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.SessionType", "SessionType")
                        .WithMany("Sessions")
                        .HasForeignKey("SessionTypeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("ClassSchedule");

                    b.Navigation("SessionType");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Sro", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.User", "User")
                        .WithOne("Sro")
                        .HasForeignKey("AcademicManagementSystem.Context.AmsModels.Sro", "UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Student", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("AcademicManagementSystem.Context.AmsModels.Student", "UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.StudentClass", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Class", "Class")
                        .WithMany("StudentsClasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Student", "Student")
                        .WithMany("StudentsClasses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Teacher", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.TeacherType", "TeacherType")
                        .WithMany("Teachers")
                        .HasForeignKey("TeacherTypeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("AcademicManagementSystem.Context.AmsModels.Teacher", "UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.WorkingTime", "WorkingTime")
                        .WithMany("Teachers")
                        .HasForeignKey("WorkingTimeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("TeacherType");

                    b.Navigation("User");

                    b.Navigation("WorkingTime");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.User", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Center", "Center")
                        .WithMany("Users")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.District", "District")
                        .WithMany("Users")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Province", "Province")
                        .WithMany("Users")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("District");

                    b.Navigation("Gender");

                    b.Navigation("Province");

                    b.Navigation("Role");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Ward", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Province", "Province")
                        .WithMany("Wards")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SkillTeacher", b =>
                {
                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("AcademicManagementSystem.Context.AmsModels.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersUserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.AttendanceStatus", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Center", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Modules");

                    b.Navigation("Rooms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Class", b =>
                {
                    b.Navigation("ClassSchedules");

                    b.Navigation("StudentsClasses");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ClassDays", b =>
                {
                    b.Navigation("ClassSchedules");

                    b.Navigation("Classes");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ClassSchedule", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.ClassStatus", b =>
                {
                    b.Navigation("ClassSchedules");

                    b.Navigation("Classes");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Course", b =>
                {
                    b.Navigation("CoursesModulesSemesters");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.CourseFamily", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.District", b =>
                {
                    b.Navigation("Centers");

                    b.Navigation("Users");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.GradeCategory", b =>
                {
                    b.Navigation("GradeCategoryModules");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.GradeCategoryModule", b =>
                {
                    b.Navigation("GradeItems");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Module", b =>
                {
                    b.Navigation("ClassSchedules");

                    b.Navigation("CoursesModulesSemesters");

                    b.Navigation("GradeCategoryModule");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Province", b =>
                {
                    b.Navigation("Centers");

                    b.Navigation("Districts");

                    b.Navigation("Users");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Room", b =>
                {
                    b.Navigation("ClassSchedulesExamRoom");

                    b.Navigation("ClassSchedulesLabRoom");

                    b.Navigation("ClassSchedulesTheoryRoom");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Semester", b =>
                {
                    b.Navigation("CoursesModuleSemesters");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Session", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.SessionType", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Sro", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("StudentsClasses");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.Teacher", b =>
                {
                    b.Navigation("ClassSchedules");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.TeacherType", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.User", b =>
                {
                    b.Navigation("ActiveRefreshTokens");

                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("Sro")
                        .IsRequired();

                    b.Navigation("Student")
                        .IsRequired();

                    b.Navigation("Teacher")
                        .IsRequired();
                });

            modelBuilder.Entity("AcademicManagementSystem.Context.AmsModels.WorkingTime", b =>
                {
                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
